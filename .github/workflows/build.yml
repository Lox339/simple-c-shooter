name: Build Multi-Language 3D Shooter

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-cpp:
    name: Build C/C++ Components
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libgl1-mesa-dev libglfw3-dev
        
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake glfw
        
    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v2
      
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake
        
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
      
    - name: Build C/C++ Components
      run: cmake --build build --config Release
      
    - name: Upload C/C++ Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cpp-build-${{ matrix.os }}
        path: |
          build/simple_shooter*
          build/Release/simple_shooter*
          
  build-csharp:
    name: Build C# Components
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
        
    - name: Restore dependencies
      run: dotnet restore src/ui/SimpleShooter.UI.csproj
      
    - name: Build C# UI Component
      run: dotnet build src/ui/SimpleShooter.UI.csproj --configuration Release --no-restore
      
    - name: Upload C# Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: csharp-build-${{ matrix.os }}
        path: |
          src/ui/bin/Release/
          
  integration-test:
    name: Integration Tests
    needs: [build-cpp, build-csharp]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download C++ Artifacts
      uses: actions/download-artifact@v4
      with:
        name: cpp-build-ubuntu-latest
        path: build/
        
    - name: Download C# Artifacts
      uses: actions/download-artifact@v4
      with:
        name: csharp-build-ubuntu-latest
        path: csharp-build/
        
    - name: Make executable
      run: chmod +x build/simple_shooter || true
      
    - name: Test C++ Component
      run: |
        if [ -f "build/simple_shooter" ]; then
          echo "C++ component built successfully"
          # ./build/simple_shooter --test || echo "Test run completed"
        else
          echo "C++ executable not found"
          ls -la build/
        fi
        
    - name: Test C# Component
      run: |
        if [ -d "csharp-build" ]; then
          echo "C# component built successfully"
          ls -la csharp-build/
        else
          echo "C# build artifacts not found"
        fi
        
  create-release:
    name: Create Release Package
    needs: [build-cpp, build-csharp, integration-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create release package
      run: |
        mkdir -p release/windows
        mkdir -p release/linux  
        mkdir -p release/macos
        
        # Copy Windows builds
        cp -r cpp-build-windows-latest/* release/windows/ || true
        cp -r csharp-build-windows-latest/* release/windows/ || true
        
        # Copy Linux builds
        cp -r cpp-build-ubuntu-latest/* release/linux/ || true
        cp -r csharp-build-ubuntu-latest/* release/linux/ || true
        
        # Copy macOS builds
        cp -r cpp-build-macos-latest/* release/macos/ || true
        cp -r csharp-build-macos-latest/* release/macos/ || true
        
        # Copy documentation
        cp README.md release/
        cp -r .kiro/specs/ release/specs/ || true
        
    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: simple-c-shooter-release
        path: release/