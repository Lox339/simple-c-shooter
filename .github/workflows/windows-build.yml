name: Windows Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.25'

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 'a42af01b72c28a8e1d7b48107b33e4f286a55ef6'

    - name: Install dependencies with vcpkg
      run: |
        vcpkg install --triplet x64-windows `
          glfw3 `
          glew `
          openal-soft `
          libsndfile

    - name: Configure CMake
      run: |
        cmake -B build `
          -DCMAKE_BUILD_TYPE=$env:BUILD_TYPE `
          -G "Visual Studio 17 2022" `
          -A x64 `
          -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"

    - name: Build C++ Components
      run: |
        cmake --build build --config $env:BUILD_TYPE --parallel

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Build C# UI Components
      run: |
        dotnet restore src/ui/SimpleShooter.UI.csproj
        dotnet build src/ui/SimpleShooter.UI.csproj --configuration $env:BUILD_TYPE --no-restore

    - name: Run basic tests
      run: |
        cd build/$env:BUILD_TYPE
        # Test that executable exists and can run basic help
        if (Test-Path "simple_shooter.exe") {
          Write-Host "✓ Executable built successfully"
          # Try to run with --help flag (should exit quickly)
          try {
            $process = Start-Process -FilePath ".\simple_shooter.exe" -ArgumentList "--help" -Wait -PassThru -NoNewWindow
            Write-Host "✓ Executable runs without crashing"
          } catch {
            Write-Host "⚠ Executable test failed: $_"
          }
        } else {
          Write-Host "✗ Executable not found"
          exit 1
        }

    - name: Package Windows build
      run: |
        mkdir artifacts
        Copy-Item "build/$env:BUILD_TYPE/simple_shooter.exe" artifacts/
        Copy-Item "build/$env:BUILD_TYPE/game_core.dll" artifacts/
        Copy-Item "README.md" artifacts/
        
        # Copy any assets if they exist
        if (Test-Path "assets") {
          Copy-Item -Recurse "assets" artifacts/
        }
        
        # Create zip archive
        Compress-Archive -Path artifacts/* -DestinationPath simple-shooter-windows.zip

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: simple-shooter-windows
        path: simple-shooter-windows.zip
        retention-days: 30

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: windows-build-logs
        path: |
          build/**/*.log
          build/**/CMakeFiles/**/*.log
        retention-days: 7